const $=(a,b=document)=>b.querySelector(a),$$=(a,b=document)=>b.querySelectorAll(a),sleep=a=>new Promise(b=>window.setTimeout(b,a));
class PrettyConsole{static setColour(a,b){this.colours||(this.colours={});this.colours[a]=b}static getColour(a){this.colours||(this.colours={});this.colours.hasOwnProperty(a)||(a.startsWith("TuneZ::")?this.colours[a]="#0082ff":this.colours[a]=this.rgbToHex(...this.hexToRgb(this.generateHexFromString(a))));return this.colours[a]}static log(a,...b){1!==b.length||Array.isArray(b[0])?(1===b.length&&(b=b[0]),this.outputGroup(a,"#5c6bc0",b,"log")):this.output(a,"#5c6bc0",b[0],"log")}static error(a,...b){1!==
b.length||Array.isArray(b[0])?(1===b.length&&(b=b[0]),this.outputGroup(a,"#c62828",b,"error")):this.output(a,"#c62828",b[0],"error")}static warn(a,...b){1!==b.length||Array.isArray(b[0])?(1===b.length&&(b=b[0]),this.outputGroup(a,"#f9a825",b,"warn")):this.output(a,"#f9a825",b[0],"warn")}static debug(a,...b){1<b.length?this.outputGroup(a,"#e91e63",b,"debug"):this.output(a,"#e91e63",b[0],"debug")}static output(a,b,c,d){const e=this.getColour(a);if("object"===typeof c)console[d](`%c[${a}]`,`color:${e};font-weight: bold;`,
c);else console[d](`%c[${a}] %c ${c}`,`color:${e};font-weight: bold;`,`color: ${b}`)}static outputGroup(a,b,c,d){const e=this.getColour(a);console.group(`%c===[${a}]===`,`color:${e};font-weight: bold;`);for(let f of c)if("debug"===d&&"string"===typeof f)f=`%c${f}`,console.debug(f,`color: ${b}`);else console[d](f);console.groupEnd()}static generateHexFromString(a=""){let b=0,c=a.length;for(let d=0;d<c;d++)a.charCodeAt(d),b=(b<<5)-b+a.charCodeAt(d),b|=0;return Math.abs(b).toString(16).slice(0,6)}static hexToRgb(a){a=
parseInt(a,16);return[a>>16&255,a>>8&255,a&255]}static rgbToHex(a,b,c){return"#"+(16777216+(a<<16)+(b<<8)+c).toString(16).slice(1)}}const EVENT_MODULE_LOADED="module-loaded";
class ModuleLoaderClass{constructor(){this.modules={};this._errCb=this._cb=null;this.isAllLoadedFired=this.isErrored=!1;this.ignitionCallbacks=[];this.waitingPromises=[];document.addEventListener(EVENT_MODULE_LOADED,this._ModuleLoadedEvent.bind(this));PrettyConsole.setColour("App","#33ffbf");window.onerror=this._OnWindowError;window.onunhandledrejection=this._OnWindowError}_OnWindowError(a){ModuleLoader.isAllLoadedFired||ModuleLoader.ModuleErrored("App",a.reason);PrettyConsole.error("Window Error",
a)}set callback(a){this._cb=a}set errorCallback(a){this._errCb=a}OnIgnition(a){this.ignitionCallbacks.push(a)}RegisterModules(a){a.forEach(b=>{this.modules[b]=!1})}FinishModule(a){this.modules[a]=!0;PrettyConsole.debug(a,"Module Loading Done");document.dispatchEvent(new CustomEvent(EVENT_MODULE_LOADED,{detail:a}))}ModuleErrored(a,b){this._errCb&&this._errCb(a,b);this.isErrored=!0;document.dispatchEvent(new CustomEvent("module-errored",{detail:{name:a,error:b}}))}ModulesLoaded(a){"string"===typeof a&&
(a=[a]);let b=a.filter(c=>!this.modules[c]);return new Promise((c,d)=>{if(0===b.length)return c();this.waitingPromises.push({resolve:c,reject:d,names:a})})}RegisterModule(a){this.modules[a]=!1}_ModuleLoadedEvent(){if(!this.isErrored&&!this.isAllLoadedFired&&(this.waitingPromises.forEach(a=>{0===a.names.filter(b=>!this.modules[b]).length&&(this.waitingPromises=this.waitingPromises.filter(b=>b!==a),a.resolve())}),!Object.keys(this.modules).filter(a=>!this.modules[a]).length))return this.isAllLoadedFired=
!0,this._cb&&this._cb(),document.dispatchEvent(new CustomEvent("startupFin")),!0}Ignite(){document.dispatchEvent(new CustomEvent("ignite"));this.ignitionCallbacks.forEach(a=>a())}RegisterInit(a){document.addEventListener("ignite",a)}LoadOtherJsFiles(a){for(let b of a)ModuleLoader.RegisterModule(b.Name);return Promise.allSettled(a.map(b=>this.LoadJSFile(b))).then(b=>{const c=b.filter(d=>"rejected"===d.status);return 0<c.length?Promise.reject(c):b})}LoadJSFile(a){return new Promise((b,c)=>{let d=document.createElement("script");
d.onload=()=>{b(a.Name);ModuleLoader.FinishModule(a.Name)};d.onerror=e=>{c(e);ModuleLoader.ModuleErrored(a.Name,e)};d.src=a.Src.replace("~/","/out/js/");document.body.appendChild(d)})}}const ModuleLoader=new ModuleLoaderClass;
class Network{static getStaticUrl(a){a.startsWith("/")||(a="/"+a);return a}static async requestUrl(a){a=this.getStaticUrl(a);let b=await fetch(a);return b.ok?await b.text():Promise.reject(`Failed to load: ${a}`)}static loadAll(a,b){const c=[];for(const d of a)c.push(this.requestUrl(b+d));return Promise.allSettled(c)}}
class LoadingScreen{constructor(){document.addEventListener(EVENT_MODULE_LOADED,this._ModuleLoadedEvent.bind(this));document.addEventListener("module-errored",this._OnErrored.bind(this));document.addEventListener("startupFin",this._StartupDone.bind(this));this.loader=$("v-loader")}_ModuleLoadedEvent(){}_OnErrored(a){a=a.detail;this.loader.setAttribute("errored","1");$(".text-small-errored",this.loader).innerHTML=`Module: "${a.name}" is Errored! <br>Cause: <br>${a.error??"Unknown"}`}async _StartupDone(){await sleep(100);
this.loader.setAttribute("success","1");await sleep(2100);document.body.removeChild(this.loader)}}new LoadingScreen;ModuleLoader.RegisterModules(["Startup"]);ModuleLoader.LoadOtherJsFiles([{Src:"~/wasm.min.js",Name:"WASMJS"},{Src:"~/app.min.js",Name:"App"}]).then(()=>{PrettyConsole.log("ModuleLoader","All JS Modules loaded");ModuleLoader.Ignite()}).catch(a=>{PrettyConsole.error("ModuleLoader",a)});
